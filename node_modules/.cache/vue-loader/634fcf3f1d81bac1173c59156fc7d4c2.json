{"remainingRequest":"/Users/yujunjiang/Downloads/gaming-industry-tracker/app/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/yujunjiang/Downloads/gaming-industry-tracker/app/src/components/USSpendGrowthChart.vue?vue&type=style&index=0&id=dc2ffa4a&scoped=true&lang=css","dependencies":[{"path":"/Users/yujunjiang/Downloads/gaming-industry-tracker/app/src/components/USSpendGrowthChart.vue","mtime":1620173999064},{"path":"/Users/yujunjiang/Downloads/gaming-industry-tracker/app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yujunjiang/Downloads/gaming-industry-tracker/app/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/Users/yujunjiang/Downloads/gaming-industry-tracker/app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yujunjiang/Downloads/gaming-industry-tracker/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yujunjiang/Downloads/gaming-industry-tracker/app/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jaGFydC1ib2R5IHsKICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KLmdhbWVzIHsKICBjb2xvcjogIzkxNDZGRjsKfQouaGFyZHdhcmUgewogIGNvbG9yOiAjRjkyNzcyOwp9Ci5hY2Nlc3NvcmllcyB7CiAgY29sb3I6ICNDMUI3NjE7Cn0KLmhvdmVyYWJsZTpob3ZlciB7CiAgZmlsdGVyOiBicmlnaHRuZXNzKDEyNSUpOwp9Cjo6di1kZWVwKC5heGlzLS14IC5kb21haW4pLAo6OnYtZGVlcCguYXhpcy0teCAudGljaykgbGluZSB7CiAgZGlzcGxheTogbm9uZTsKfQo="},{"version":3,"sources":["/Users/yujunjiang/Downloads/gaming-industry-tracker/app/src/components/USSpendGrowthChart.vue"],"names":[],"mappings":";AAgKA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACR,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;EAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACf","file":"/Users/yujunjiang/Downloads/gaming-industry-tracker/app/src/components/USSpendGrowthChart.vue","sourceRoot":"","sourcesContent":["<template>\n<div>\n  <ChartTitle>Growth of consumer spending on video games in the United States from March to August 2020</ChartTitle>\n  <div class=\"chart-body\" ref=\"container\">\n    <svg\n      :viewBox=\"`0 0 ${width} ${height}`\"\n      ref=\"svg\"\n    >\n      <ChartXAxis\n        :x=\"x\"\n        :tick-values=\"groups\"\n        :transform=\"`translate(0,${height - margin.bottom})`\"\n      />\n      <ChartYAxis\n        :y=\"y\"\n        :transform=\"`translate(${margin.left},0)`\"\n        :tickFormat=\"formatValue\"\n      />\n      <line\n        :x1=\"x.range()[0]\"\n        :x2=\"x.range()[1]\"\n        :y1=\"y(0)\"\n        :y2=\"y(0)\"\n        stroke=\"currentColor\"\n      ></line>\n      <g>\n        <g \n          v-for=\"(g, i) in groups\" \n          :key=\"g\"\n          :transform=\"`translate(${x(g)},0)`\"\n          class=\"hoverable\"\n          @mouseenter=\"entered(i)\"\n          @mouseleave=\"left\"\n          >\n            <rect\n              v-for=\"s in series\"\n              :key=\"s\"\n              :class=\"s\"\n              :x=\"xInner(s)\"\n              :width=\"xInner.bandwidth()\"\n              :y=\"Math.min(y(0), y(records[i][s]))\"\n              :height=\"Math.abs(y(0) - y(records[i][s]))\"\n              fill=\"currentColor\"\n            ></rect>\n        </g>\n      </g>\n    </svg>\n    <ChartTooltip\n      :bounds-width=\"width\"\n      :x=\"tooltipX\"\n      :y=\"tooltipY\"\n      :show=\"tooltipShow\"\n    >\n      <div v-if=\"tooltipData\">\n        <div class=\"tooltip-item tooltip-title\">{{ tooltipData.date }}</div>\n        <div v-for=\"s in series\" :key=\"s\" class=\"tooltip-item\">\n          <div :class=\"s\" class=\"tooltip-name\">{{ s }}</div>\n          <div>{{ formatValue(tooltipData[s]) }}</div>\n        </div>\n      </div>\n    </ChartTooltip>\n  </div>\n</div>\n</template>\n\n<script>\nimport { json, min, max, scaleBand, scaleLinear } from \"d3\";\nimport ChartTitle from \"./ChartTitle.vue\";\nimport ChartXAxis from \"./ChartXAxis.vue\";\nimport ChartYAxis from \"./ChartYAxis.vue\";\nimport ChartTooltip from \"./ChartTooltip.vue\";\n\nexport default {\n  components: {\n    ChartTitle,\n    ChartXAxis,\n    ChartYAxis,\n    ChartTooltip\n  },\n  data() {\n    return {\n      groups: [],\n      series: [],\n      records: [],\n      minValue: 0,\n      maxValue: 0,\n      width: 300,\n      height: 400,\n      margin: {\n        top: 10,\n        right: 5,\n        bottom: 120,\n        left: 48\n      },\n      tooltipData: null,\n      tooltipY: 100,\n      tooltipShow: false\n    }\n  },\n  computed: {\n    x() {\n      return scaleBand()\n        .domain(this.groups)\n        .range([this.margin.left, this.width - this.margin.right])\n        .padding(0.4);\n    },\n    xInner() {\n      return scaleBand()\n        .domain(this.series)\n        .range([0, this.x.bandwidth()])\n        .padding(0.1);\n    },\n    y() {\n      return scaleLinear()\n        .domain([this.minValue, this.maxValue])\n        .range([this.height - this.margin.bottom, this.margin.top])\n        .nice();\n    },\n    formatValue() {\n      return v => `${v}%`;\n    },\n    tooltipX() {\n      return this.tooltipData !== null \n        ? this.x(this.tooltipData.date) + this.x.bandwidth() \n        : -999;\n    }\n  },\n  created() {\n    json('usvideogame_spendgrowth.json')\n    .then(data => {\n      this.groups = data.map(d => d.date);\n      this.series = [\"games\", \"hardware\", \"accessories\"];\n      this.records = data;\n      this.minValue = min(data, d => min(this.series, s => d[s]));\n      this.maxValue = max(data, d => max(this.series, s => d[s]));\n    });\n  },\n  mounted() {\n    this.resize();\n    window.addEventListener(\"resize\", this.resize);\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"resize\", this.resize);\n  },\n  methods: {\n    resize() {\n      this.width = this.$refs.container.clientWidth;\n    },\n    entered(i) {\n      this.tooltipShow = true;\n      this.tooltipData = this.records[i];\n    },\n    left() {\n      this.tooltipShow = false;\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chart-body {\n  position: relative;\n}\n.games {\n  color: #9146FF;\n}\n.hardware {\n  color: #F92772;\n}\n.accessories {\n  color: #C1B761;\n}\n.hoverable:hover {\n  filter: brightness(125%);\n}\n::v-deep(.axis--x .domain),\n::v-deep(.axis--x .tick) line {\n  display: none;\n}\n</style>"]}]}