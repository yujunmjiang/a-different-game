{"remainingRequest":"/Users/yujunjiang/Documents/GitHub/a-different-game/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/yujunjiang/Documents/GitHub/a-different-game/src/components/USConsumerSpendChart.vue?vue&type=style&index=0&id=bb6661f8&scoped=true&lang=css","dependencies":[{"path":"/Users/yujunjiang/Documents/GitHub/a-different-game/src/components/USConsumerSpendChart.vue","mtime":1620093651224},{"path":"/Users/yujunjiang/Documents/GitHub/a-different-game/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yujunjiang/Documents/GitHub/a-different-game/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/Users/yujunjiang/Documents/GitHub/a-different-game/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yujunjiang/Documents/GitHub/a-different-game/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yujunjiang/Documents/GitHub/a-different-game/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jaGFydC1ib2R5IHsKICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KLnZhbHVlLWxhYmVsIHsKICBjb2xvcjogI2ZmZjsKfQouY29udGVudCB7CiAgY29sb3I6ICM5MTQ2RkY7Cn0KLmhhcmR3YXJlIHsKICBjb2xvcjogI0Y5Mjc3MjsKfQouYWNjZXNzb3JpZXMgewogIGNvbG9yOiAjQzFCNzYxOwp9Ci5ob3ZlcmFibGU6aG92ZXIgewogIGZpbHRlcjogYnJpZ2h0bmVzcygxMjUlKTsKfQo="},{"version":3,"sources":["/Users/yujunjiang/Documents/GitHub/a-different-game/src/components/USConsumerSpendChart.vue"],"names":[],"mappings":";AAoKA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACb;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACP,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACR,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B","file":"/Users/yujunjiang/Documents/GitHub/a-different-game/src/components/USConsumerSpendChart.vue","sourceRoot":"","sourcesContent":["<template>\n<div>\n  <ChartTitle>Consumer spending on gaming in the United States in 2nd quarter 2019 and 2nd quarter 2020</ChartTitle>\n  <div class=\"chart-body\" ref=\"container\">\n    <svg\n      :viewBox=\"`0 0 ${width} ${height}`\"\n      ref=\"svg\"\n    >\n      <ChartXAxis\n        :x=\"x\"\n        :tick-values=\"groups\"\n        :transform=\"`translate(0,${height - margin.bottom})`\"\n      />\n      <ChartYAxis\n        :y=\"y\"\n        :transform=\"`translate(${margin.left},0)`\"\n      />\n      <g>\n        <g \n          v-for=\"([g, gs], i) in stacks\" \n          :key=\"g\"\n          :transform=\"`translate(${x(g)},0)`\"\n          class=\"hoverable\"\n          @mouseenter=\"entered(i)\"\n          @mouseleave=\"left\"\n          >\n            <rect\n              v-for=\"s in gs\"\n              :key=\"s.key\"\n              :class=\"s.key\"\n              :width=\"x.bandwidth()\"\n              :y=\"y(s[0][1])\"\n              :height=\"y(s[0][0])- y(s[0][1])\"\n              fill=\"currentColor\"\n            ></rect>\n            <text\n              v-for=\"s in gs\"\n              :key=\"s.key\"\n              class=\"value-label\"\n              :x=\"x.bandwidth() / 2\"\n              :y=\"(y(s[0][0]) + y(s[0][1])) / 2\"\n              dy=\"0.32em\"\n              text-anchor=\"middle\"\n              fill=\"currentColor\"\n            >{{ s[0].data[s.key] }}</text>\n        </g>\n      </g>\n    </svg>\n    <ChartTooltip\n      :bounds-width=\"width\"\n      :x=\"tooltipX\"\n      :y=\"tooltipY\"\n      :show=\"tooltipShow\"\n    >\n      <div v-if=\"tooltipData\">\n        <div class=\"tooltip-item tooltip-title\">{{ tooltipData[0] }}</div>\n        <div v-for=\"d in tooltipData[1]\" :key=\"d.key\" class=\"tooltip-item\">\n          <div :class=\"d.key\" class=\"tooltip-name\">{{ d.key }}</div>\n          <div>{{ formatValue(d[0].data[d.key]) }}</div>\n        </div>\n      </div>\n    </ChartTooltip>\n  </div>\n</div>\n</template>\n\n<script>\nimport { json, max, scaleBand, scaleLinear, stack, stackOrderNone, stackOffsetNone} from \"d3\";\nimport ChartTitle from \"./ChartTitle.vue\";\nimport ChartXAxis from \"./ChartXAxis.vue\";\nimport ChartYAxis from \"./ChartYAxis.vue\";\nimport ChartTooltip from \"./ChartTooltip.vue\";\n\nexport default {\n  components: {\n    ChartTitle,\n    ChartXAxis,\n    ChartYAxis,\n    ChartTooltip\n  },\n  data() {\n    return {\n      groups: [],\n      series: [],\n      stacks: [],\n      maxValue: 0,\n      width: 300,\n      height: 400,\n      margin: {\n        top: 10,\n        right: 5,\n        bottom: 120,\n        left: 48\n      },\n      tooltipData: null,\n      tooltipShow: false\n    }\n  },\n  computed: {\n    x() {\n      return scaleBand()\n        .domain(this.groups)\n        .range([this.margin.left, this.width - this.margin.right])\n        .padding(0.4);\n    },\n    y() {\n      return scaleLinear()\n        .domain([0, this.maxValue])\n        .range([this.height - this.margin.bottom, this.margin.top])\n        .nice();\n    },\n    formatValue() {\n      return v => `$ ${v}B`;\n    },\n    tooltipX() {\n      return this.tooltipData !== null \n        ? this.x(this.tooltipData[0]) + this.x.bandwidth() \n        : -999;\n    },\n    tooltipY() {\n      return this.tooltipData !== null \n        ? this.y(this.tooltipData[1][this.tooltipData[1].length - 1][0][1])\n        : -999;\n    }\n  },\n  created() {\n    json('usvideogame_consumerspend.json')\n    .then(data => {\n      this.groups = data.map(d => d.time);\n      this.series = [\"content\", \"hardware\", \"accessories\"];\n      const stackGenerator = stack()\n        .keys(this.series)\n        .order(stackOrderNone)\n        .offset(stackOffsetNone);\n      this.stacks = data.map(d => [\n        d.time,\n        stackGenerator([d])\n      ]);\n      this.maxValue = max(this.stacks, d => max(d[1], e => e[e.length - 1][1]));\n    });\n  },\n  mounted() {\n    this.resize();\n    window.addEventListener(\"resize\", this.resize);\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"resize\", this.resize);\n  },\n  methods: {\n    resize() {\n      this.width = this.$refs.container.clientWidth;\n    },\n    entered(i) {\n      this.tooltipShow = true;\n      this.tooltipData = this.stacks[i];\n    },\n    left() {\n      this.tooltipShow = false;\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chart-body {\n  position: relative;\n}\n.value-label {\n  color: #fff;\n}\n.content {\n  color: #9146FF;\n}\n.hardware {\n  color: #F92772;\n}\n.accessories {\n  color: #C1B761;\n}\n.hoverable:hover {\n  filter: brightness(125%);\n}\n</style>"]}]}